[{"path":"https://briandconnelly.github.io/airnow/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 airnow authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://briandconnelly.github.io/airnow/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brian Connelly. Author, maintainer, copyright holder.","code":""},{"path":"https://briandconnelly.github.io/airnow/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Connelly B (2022). airnow: Retrieve 'AirNow' Air Quality Observations Forecasts. R package version 0.0.0.9000, https://github.com/briandconnelly/airnow.","code":"@Manual{,   title = {airnow: Retrieve 'AirNow' Air Quality Observations and Forecasts},   author = {Brian Connelly},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://github.com/briandconnelly/airnow}, }"},{"path":"https://briandconnelly.github.io/airnow/index.html","id":"airnow","dir":"","previous_headings":"","what":"Retrieve AirNow Air Quality Observations and Forecasts","title":"Retrieve AirNow Air Quality Observations and Forecasts","text":"airnow R package querying retrieving air quality information AirNow via AirNow API. Current historical readings well forecasts can retrieved tidy data frames.","code":""},{"path":"https://briandconnelly.github.io/airnow/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Retrieve AirNow Air Quality Observations and Forecasts","text":"can install stable version airnow CRAN: ’d like try development version airnow, can install directly GitHub:","code":"install.packages(\"airnow\") # install.packages(\"remotes\") remotes::install_github(\"briandconnelly/airnow\")"},{"path":"https://briandconnelly.github.io/airnow/index.html","id":"creating-an-api-token","dir":"","previous_headings":"","what":"Creating an API Token","title":"Retrieve AirNow Air Quality Observations and Forecasts","text":"AirNow API generally free use. set_airnow_token() function can used help create configure API token.","code":"library(airnow)  set_airnow_token()"},{"path":[]},{"path":"https://briandconnelly.github.io/airnow/index.html","id":"current-air-quality-in-seattle","dir":"","previous_headings":"Examples","what":"Current air quality in Seattle","title":"Retrieve AirNow Air Quality Observations and Forecasts","text":"AirNow API allows query air conditions either ZIP code latitude/longitude. , ’ll get current conditions Seattle ZIP code:","code":"library(airnow)  get_airnow_conditions(zip = \"98101\") #> # A tibble: 2 × 11 #>   date_observed hour_obs…¹ local…² repor…³ state…⁴ latit…⁵ longi…⁶ param…⁷   aqi #>   <date>             <int> <fct>   <fct>   <fct>     <dbl>   <dbl> <fct>   <int> #> 1 2022-10-29            17 PST     Seattl… WA         47.6   -122. O3         25 #> 2 2022-10-29            17 PST     Seattl… WA         47.6   -122. PM2.5      38 #> # … with 2 more variables: category_number <int>, category_name <fct>, and #> #   abbreviated variable names ¹​hour_observed, ²​local_time_zone, #> #   ³​reporting_area, ⁴​state_code, ⁵​latitude, ⁶​longitude, ⁷​parameter"},{"path":"https://briandconnelly.github.io/airnow/index.html","id":"find-the-site-with-the-lowest-air-quality-near-washington-state","dir":"","previous_headings":"Examples","what":"Find the site with the lowest air quality near Washington state","title":"Retrieve AirNow Air Quality Observations and Forecasts","text":"","code":"library(airnow) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  get_airnow_area(   box = c(-125.394211, 45.295897, -116.736984, 49.172497),   verbose = TRUE ) |>   slice_max(order_by = aqi, n = 1) |>   select(site_name, site_agency, latitude, longitude, aqi, datetime_observed) #> # A tibble: 1 × 6 #>   site_name            site_agency     latit…¹ longi…²   aqi datetime_observed   #>   <fct>                <fct>             <dbl>   <dbl> <int> <dttm>              #> 1 Chehalis-Market Blvd Washington Dep…    46.7   -123.   129 2022-10-30 00:00:00 #> # … with abbreviated variable names ¹​latitude, ²​longitude"},{"path":"https://briandconnelly.github.io/airnow/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"Retrieve AirNow Air Quality Observations and Forecasts","text":"package author affiliated AirNow partners. See Data Exchange Guidelines details data set used. Data typically refreshed per hour. Please kind service limit request rate.","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/airnow-package.html","id":null,"dir":"Reference","previous_headings":"","what":"airnow: Retrieve 'AirNow' Air Quality Observations and Forecasts — airnow-package","title":"airnow: Retrieve 'AirNow' Air Quality Observations and Forecasts — airnow-package","text":"Retrieve air quality data via 'AirNow' https://www.airnow.gov/ API.","code":""},{"path":[]},{"path":"https://briandconnelly.github.io/airnow/reference/airnow-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"airnow: Retrieve 'AirNow' Air Quality Observations and Forecasts — airnow-package","text":"Maintainer: Brian Connelly bdc@bconnelly.net (ORCID) [copyright holder]","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/aqi.html","id":null,"dir":"Reference","previous_headings":"","what":"Label AQI Values — aqi_color","title":"Label AQI Values — aqi_color","text":"aqi_color() returns color corresponds given AQI value. aqi_descriptor() converts given AQI value(s) descriptive string.","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/aqi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label AQI Values — aqi_color","text":"","code":"aqi_color(aqi)  aqi_descriptor(aqi)"},{"path":"https://briandconnelly.github.io/airnow/reference/aqi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label AQI Values — aqi_color","text":"aqi AQI value. AQI integer 0 500, inclusive.","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/aqi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label AQI Values — aqi_color","text":"aqi_color() returns RGB hex string aqi_descriptor() returns string","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/aqi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Label AQI Values — aqi_color","text":"","code":"aqi_color(35) #> [1] \"#00E400\" aqi_descriptor(35) #> [1] \"Good\""},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Get air quality data for a given region — get_airnow_area","title":"Get air quality data for a given region — get_airnow_area","text":"get_airnow_area() retrieves recent air quality readings sites specified region.","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get air quality data for a given region — get_airnow_area","text":"","code":"get_airnow_area(   box,   parameters = \"pm25\",   start_time = NULL,   end_time = NULL,   monitor_type = \"both\",   data_type = c(\"aqi\", \"concentrations\", \"both\"),   verbose = FALSE,   raw_concentrations = FALSE,   clean_names = TRUE,   api_key = get_airnow_token() )"},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get air quality data for a given region — get_airnow_area","text":"box Four-element numeric vector specifying bounding box region interest. Format (minX, minY, maxX, maxY), X Y longitude latitude, respectively. parameters Parameter(s) return data . Choices PM_2.5 (pm25: default), ozone, PM_10 (pm10), CO (co), NO2 (no2), SO2 (so2). start_time Optional. date time (UTC) start time period requested. specified, end_time must also given. specified, recent past hour used. end_time Optional. date time (UTC) end time period requested. specified, start_time must also given. specified, following hour used. monitor_type Type monitor returned, either \"permanent\", \"mobile\", \"\" (default). data_type Type data returned, either \"aqi\" (default), \"concentrations\", \"\". verbose Logical value indicating whether include additional site information including Site Name, Agency Name, AQS ID, Full AQS ID (default: FALSE) raw_concentrations Logical value indicating whether raw hourly concentration data included (default: FALSE) clean_names Whether column names cleaned (default: TRUE) api_key AirNow API key","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get air quality data for a given region — get_airnow_area","text":"data frame current air quality conditions","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get air quality data for a given region — get_airnow_area","text":"","code":"if (FALSE) { # Get air quality data around Washington state get_airnow_area(box = c(-125.394211, 45.295897, -116.736984, 49.172497)) }"},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get current air quality conditions — get_airnow_conditions","title":"Get current air quality conditions — get_airnow_conditions","text":"get_airnow_conditions() retrieves recent air quality readings given location. Locations can specified either ZIP code (zip), latitude/longitude. data exist specified location, optional search radius sites can specified using distance.","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get current air quality conditions — get_airnow_conditions","text":"","code":"get_airnow_conditions(   zip = NULL,   latitude = NULL,   longitude = NULL,   distance = NULL,   clean_names = TRUE,   api_key = get_airnow_token() )"},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get current air quality conditions — get_airnow_conditions","text":"zip ZIP code, 5-digit numeric string (e.g., \"90210\") latitude Latitude decimal degrees longitude Longitude decimal degrees distance Optional. reporting area associated given zip code, current observations nearby reporting area within distance (miles) returned, available. clean_names Whether column names cleaned (default: TRUE) api_key AirNow API key","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_conditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get current air quality conditions — get_airnow_conditions","text":"data frame current air quality conditions","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_conditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get current air quality conditions — get_airnow_conditions","text":"","code":"if (FALSE) { get_airnow_conditions(zip = \"90210\") }"},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Get air quality forecast — get_airnow_forecast","title":"Get air quality forecast — get_airnow_forecast","text":"get_airnow_forecast() retrieves forecasted air quality conditions given location. Locations can specified either ZIP code (zip), latitude/longitude. data exist specified location, optional search radius sites can specified using distance.","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get air quality forecast — get_airnow_forecast","text":"","code":"get_airnow_forecast(   zip = NULL,   latitude = NULL,   longitude = NULL,   distance = NULL,   date = NULL,   clean_names = TRUE,   api_key = get_airnow_token() )"},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get air quality forecast — get_airnow_forecast","text":"zip ZIP code, 5-digit numeric string (e.g., \"90210\") latitude Latitude decimal degrees longitude Longitude decimal degrees distance Optional. reporting area associated given zip code, current observations nearby reporting area within distance (miles) returned, available. date Optional date forecast. specified, current forecast returned. clean_names Whether column names cleaned (default: TRUE) api_key AirNow API key","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get air quality forecast — get_airnow_forecast","text":"data frame current air quality conditions","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get air quality forecast — get_airnow_forecast","text":"","code":"if (FALSE) { get_airnow_forecast(zip = \"90210\") }"},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage AirNow API Tokens — get_airnow_token","title":"Manage AirNow API Tokens — get_airnow_token","text":"get_airnow_token() returns configured AirNow API token errors set. set_airnow_token() sets AirNow API token given value current session. use permanently, save AIRNOW_API_KEY ~/.Renviron file.","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage AirNow API Tokens — get_airnow_token","text":"","code":"get_airnow_token(ask = is_interactive())  set_airnow_token(token = NULL, ask = is_interactive())"},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage AirNow API Tokens — get_airnow_token","text":"ask Whether ask key none provided. Note works interactive sessions. token Token use","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage AirNow API Tokens — get_airnow_token","text":"get_airnow_token() returns string containing current user group key empty string set. user set ask TRUE, user prompted key.","code":""},{"path":"https://briandconnelly.github.io/airnow/reference/get_airnow_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage AirNow API Tokens — get_airnow_token","text":"","code":"if (FALSE) { get_airnow_token() } if (FALSE) { set_airnow_token(token = \"4d36e978-e325-11cec1-08002be10318\") }"}]
